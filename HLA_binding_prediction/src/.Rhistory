ls
pwd
dat = read.csv("dataset_norm.csv", header = TRUE)
dat = read.csv("/Users/johnny/Desktop/IPIPAN_conf_paper/dataset/dataset_norm.csv", header = TRUE)
dat
dat = read.csv("/Users/johnny/Desktop/IPIPAN_conf_paper/dataset/dataset_norm.csv", header = TRUE)
str(dat)
dat$IC50 <- round(dat$IC50)
summary(dat$IC50)
sum(dat$IC50 < 3)
dat$IC50[dat$IC50 != round(dat$IC50)]
tmp <- dat[(dat$IC50 < 45000) ,4:ncol(dat)]
str(tmp)
tmp$IC50 <- tmp$IC50
m1 <- glm(IC50 ~ ., family = , data = tmp)
summary(m1)
m1 <- glm(IC50 ~ ., family = gaussian, data = tmp)
summary(m1)
dat = read.csv("/Users/johnny/Desktop/IPIPAN_conf_paper/dataset/dataset_norm.csv", header = TRUE
str(dat)
dat = read.csv("/Users/johnny/Desktop/IPIPAN_conf_paper/dataset/dataset_norm.csv", header = TRUE)
str(dat)
dat$IC50 <- round(dat$IC50)
summary(dat$IC50)
sum(dat$IC50 < 3)
dat$IC50[dat$IC50 != round(dat$IC50)]
tmp <- dat[(dat$IC50 < 45000) ,4:ncol(dat)]
str(tmp)
tmp$IC50 <- tmp$IC50
m1 <- glm(IC50 ~ ., family = poisson, data = tmp)
summary(m1)
tmp
set.seed(777);
#Add some nonsense attributes to iris dataset by shuffling original attributes
iris.extended<-data.frame(iris,apply(iris[,-5],2,sample));
names(iris.extended)[6:9]<-paste("Nonsense",1:4,sep="");
#Run Boruta on this data
Boruta(Species~.,data=iris.extended,doTrace=2)->Boruta.iris.extended
#Nonsense attributes should be rejected
print(Boruta.iris.extended);
iris.extended<-data.frame(iris,apply(iris[,-5],2,sample));
names(iris.extended)[6:9]<-paste("Nonsense",1:4,sep="");
Boruta(Species~.,data=iris.extended,doTrace=2)->Boruta.iris.extended
library("Boruta", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
Boruta(Species~.,data=iris.extended,doTrace=2)->Boruta.iris.extended
print(Boruta.iris.extended);
Boruta(Species~.,data=iris.extended,getImp=getImpFerns)->Boruta.ferns.irisE
print(Boruta.ferns.irisE);
library(mlbench); data(HouseVotes84);
na.omit(HouseVotes84)->hvo;
Boruta(Class~.,data=hvo,doTrace=2)->Bor.hvo;
print(Bor.hvo);
plot(Bor.hvo);
plotImpHistory(Bor.hvo);
print(Bor.son);
library(mlbench); data(Ozone);
library(randomForest);
na.omit(Ozone)->ozo;
Boruta(V4~.,data=ozo,doTrace=2)->Bor.ozo;
cat('Random forest run on all attributes:\n');
print(randomForest(V4~.,data=ozo));
cat('Random forest run only on confirmed attributes:\n');
print(randomForest(ozo[,getSelectedAttributes(Bor.ozo)],ozo$V4));
library(mlbench); data(Sonar);
Boruta(Class~.,data=Sonar,doTrace=2)->Bor.son;
plot(Bor.son,sort=FALSE);
xdx <- names(Bor.son$finalDecision[Bor.son$finalDecision != "Rejected"])
Sonar[,xdx]
names
Bor.son
Sonar
Sonar[,xdx, Class]
Sonar[Class]
Sonar['Class']
Sonar[, xdx, 'Class']
Sonar[, xdx && 'Class']
Sonar[xdx && 'Class']
Sonar[,]
Sonar[,xdx][,'Class']
Sonar[,xdx] && Sonar['Class']
Sonar[,xdx]
Sonar[c(xdx,'Class')]
df = Sonar[c(xdx,'Class')]
m1 <- glm(Class ~ ., family = poisson, data = df)
